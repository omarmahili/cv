{"version":3,"sources":["components/A4.tsx","components/Subhead.tsx","components/IconText.tsx","components/Info.tsx","components/Profile.tsx","components/Title.tsx","components/ExperienceDetails.tsx","components/ExperiencesSection.tsx","components/Tag.tsx","components/Skills.tsx","components/StackOverflow.tsx","components/DownloadLink.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["A4","children","className","Subhead","IconText","icon","Info","info","email","phoneNumber","githubNickname","birthDate","Profile","profile","imageBase64","src","alt","fullname","expertise","description","Title","ExperienceDetails","details","to","period","from","companyOrInstitute","professionOrDegree","location","ExperiencesSection","title","list","map","x","i","key","Tag","Skills","skills","StackOverflow","stackoverflow","reputation","answers","peopleReached","DownloadLink","elementRef","useState","creating","setCreating","creatingSpinner","downloadLink","onClick","window","scrollTo","html2canvas","current","scale","then","canvas","doc","jsPDF","addImage","save","staticData","require","App","pageRef","useRef","ref","experiences","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e5bbcbcd.chunk.js","sourcesContent":["import React from \"react\";\n\ninterface A4Props {\n  children: React.ReactNode;\n}\n\nconst A4: React.FunctionComponent<A4Props> = ({ children }) => (\n  <div className=\"a4 bg-white shadow flex flex-row\">{children}</div>\n);\n\nexport default A4;\n","import React from \"react\";\n\ninterface SubheadProps {\n  children: string;\n}\n\nconst Subhead: React.FunctionComponent<SubheadProps> = ({ children }) => (\n  <p className=\"text-sm uppercase mb-2\">{children}</p>\n);\n\nexport default Subhead;\n","import React from \"react\";\n\ninterface IconTextProps {\n  icon: React.ReactNode;\n  children: string;\n}\n\nconst IconText: React.FunctionComponent<IconTextProps> = ({\n  icon,\n  children,\n}) => (\n  <div className=\"flex flex-row items-center mb-1\">\n    <div className=\"mr-2\">{icon}</div>\n    {children}\n  </div>\n);\n\nexport default IconText;\n","import React from \"react\";\nimport { ImMail2, ImGithub, ImPhone, ImCalendar } from \"react-icons/im\";\nimport Subhead from \"./Subhead\";\nimport IconText from \"./IconText\";\nimport { InfoData } from \"../models/cv\";\n\ninterface InfoProps {\n  info: InfoData;\n}\n\nconst Info: React.FunctionComponent<InfoProps> = ({\n  info\n}) => (\n  <div className=\"mb-8\">\n    <Subhead>Info</Subhead>\n    <div className=\"text-sm text-gray-600\">\n      <IconText icon={<ImMail2 />}>{info.email}</IconText>\n      <IconText icon={<ImPhone />}>{info.phoneNumber}</IconText>\n      <IconText icon={<ImGithub />}>{info.githubNickname}</IconText>\n      <IconText icon={<ImCalendar />}>{info.birthDate}</IconText>\n    </div>\n  </div>\n);\n\nexport default Info;\n","import React from \"react\";\nimport { ImUser } from \"react-icons/im\";\nimport { ProfileData } from \"../models/cv\";\n\ninterface ProfileProps {\n  profile: ProfileData;\n}\n\nconst Profile: React.FunctionComponent<ProfileProps> = ({ profile }) => (\n  <div className=\"flex flex-col items-center mb-16\">\n    <div className=\" flex items-center justify-center w-40 h-40 rounded-full bg-gray-300 mb-6 overflow-hidden\">\n      {profile.imageBase64 ? (\n        <img\n          className=\"w-40 h-auto\"\n          src={profile.imageBase64}\n          alt=\"Profile\"\n        />\n      ) : (\n        <ImUser className=\"text-gray-400 w-24 h-auto\" />\n      )}\n    </div>\n    <div className=\"flex flex-col items-center\">\n      <p className=\"text-lg\">{profile.fullname}</p>\n      <p className=\"text-xl text-orange-600 mb-6\">{profile.expertise}</p>\n      <p className=\"text-gray-600 italic text-center\">\n        \"{profile.description}\"\n      </p>\n    </div>\n  </div>\n);\n\nexport default Profile;\n","import React from \"react\";\n\ninterface TitleProps {\n  children: string;\n}\n\nconst Title: React.FunctionComponent<TitleProps> = ({ children }) => (\n  <div className=\"flex items-center w-full h-10 mb-1\">\n    <div className=\"flex-1 border-t-2 border-blue-600 h-0\"></div>\n    <div className=\"mx-10 uppercase font-thin text-xl\">{children}</div>\n    <div className=\"flex-1 border-t-2 border-blue-600 h-0\"></div>\n  </div>\n);\n\nexport default Title;\n","import React from \"react\";\nimport { ImLocation2 } from \"react-icons/im\";\nimport { ExperienceDetailsData } from \"../models/cv\";\nimport IconText from \"./IconText\";\n\ninterface ExperienceDetailsProps {\n  details: ExperienceDetailsData;\n}\n\nconst ExperienceDetails: React.FunctionComponent<ExperienceDetailsProps> = ({\n  details,\n}) => {\n  const to =  details.to || \"Current\";\n  const period = details.from !== details.to ? `${details.from} - ${to}` : details.from;\n\n  const companyOrInstitute = details.companyOrInstitute ? (\n    <p className=\"text-base text-gray-800\">{`at ${details.companyOrInstitute}`}</p>\n  ) : null;\n\n  const description = details.description ? (\n    <p className=\"text-sm mb-2\">{details.description}</p>\n  ) : null;\n\n  const professionOrDegree = details.professionOrDegree ? (\n    <p className=\"text-lg text-orange-600\">{details.professionOrDegree}</p>\n  ) : null;\n\n  const location = details.location ? (\n    <IconText icon={<ImLocation2 />}>{details.location}</IconText>\n  ) : null;\n\n  return (\n    <li className=\"flex flex-row text-sm text-gray-800\">\n      <div className=\"h-6 flex justify-center items-center\">\n        <div className=\"w-2 h-2 border-2 border-blue-600 rounded-full\"></div>\n      </div>\n      <div className=\"flex flex-col flex-1 ml-4\">\n        <p className=\"h-6 flex items-center mb-2\">{period}</p>\n        <div>\n          {professionOrDegree}\n          <div className=\"flex flex-row justify-between text-gray-600 mb-2\">\n            {companyOrInstitute}\n            <div className=\"text-sm\">\n              {location}\n            </div>\n          </div>\n          {description}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default ExperienceDetails;\n","import React from \"react\";\nimport Title from \"./Title\";\nimport { ExperienceDetailsData } from \"../models/cv\";\nimport ExperienceDetails from \"./ExperienceDetails\";\n\ninterface ExperiencesSectionProps {\n  title: string;\n  list: ExperienceDetailsData[];\n}\n\nconst ExperiencesSection: React.FunctionComponent<ExperiencesSectionProps> = ({\n  title,\n  list,\n}) => (\n  <div className=\"mb-2\">\n    <Title>{title}</Title>\n    <ul className=\"mb-1\">\n      {list.map((x, i) => (\n        <ExperienceDetails key={i} details={x} />\n      ))}\n    </ul>\n  </div>\n);\n\nexport default ExperiencesSection;\n","import React from \"react\";\n\ninterface TagProps {\n  children: string;\n}\n\nconst Tag: React.FunctionComponent<TagProps> = ({ children }) => (\n  <div className=\"bg-blue-400 px-2 py-1 shadow mr-2 mb-2\">\n    <p className=\"text-white text-xs\">{children}</p>\n  </div>\n);\n\nexport default Tag;\n","import React from \"react\";\nimport Subhead from \"./Subhead\";\nimport Tag from \"./Tag\";\n\ninterface SkillsProps {\n  skills: string[];\n}\n\nconst Skills: React.FunctionComponent<SkillsProps> = ({ skills }) => (\n  <div className=\"flex flex-col mb-8\">\n    <Subhead>Skills</Subhead>\n    <div className=\"flex flex-wrap\">\n      {skills.map((x, i) => (\n        <Tag key={i}>{x}</Tag>\n      ))}\n    </div>\n  </div>\n);\n\nexport default Skills;\n","import React from \"react\";\nimport { ImStackoverflow } from \"react-icons/im\";\nimport { StackOverflowData } from \"../models/cv\";\nimport IconText from \"./IconText\";\nimport Subhead from \"./Subhead\";\n\ninterface StackOverflowProps {\n  stackoverflow: StackOverflowData;\n}\n\nconst StackOverflow: React.FunctionComponent<StackOverflowProps> = ({\n  stackoverflow,\n}) => (\n  <div className=\"mb-8\">\n    <Subhead>StackOverflow</Subhead>\n    <div className=\"text-gray-600\">\n      <p className=\"text-xs italic mb-1\">Active from {stackoverflow.from}</p>\n      <IconText icon={<ImStackoverflow />}>\n        {`${stackoverflow.reputation} Reputation`}\n      </IconText>\n      <p className=\"mb-1\">{stackoverflow.answers} answers</p>\n      <p className=\"mb-1\">\n        {stackoverflow.peopleReached} people reached\n      </p>\n    </div>\n  </div>\n);\n\nexport default StackOverflow;\n","import React, { useState } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport IconText from \"./IconText\";\nimport { ImDownload2, ImSpinner2 } from \"react-icons/im\";\n\ninterface DownloadLinkProps {\n  elementRef: any;\n}\n\nconst DownloadLink: React.FunctionComponent<DownloadLinkProps> = ({\n  elementRef,\n}) => {\n  const [creating, setCreating] = useState(false);\n\n  const handleClick = () => {\n    // avoids blank space on top\n    setCreating(true);\n\n    window.scrollTo(0, 0);\n\n    if (!creating) {\n      html2canvas(elementRef.current as HTMLElement, {\n        scale: 4,\n      }).then(function (canvas) {\n        const doc = new jsPDF(\"portrait\", \"mm\", \"a4\");\n        doc.addImage(canvas, \"jpeg\", 0, 0, 210, 297);\n        doc.save(\"cv.pdf\");\n\n        setCreating(false);\n      });\n    }\n  };\n\n  const creatingSpinner = (\n    <IconText icon={<ImSpinner2 className=\"animate-spin\" />}>\n      Creating PDF\n    </IconText>\n  );\n\n  const downloadLink = (\n    <div className=\"cursor-pointer underline\" onClick={handleClick}>\n      <IconText icon={<ImDownload2 />}>Download</IconText>\n    </div>\n  );\n\n  return (\n    <div className=\"text-sm text-gray-800 mb-4\">\n      {creating ? creatingSpinner : downloadLink}\n    </div>\n  );\n};\n\nexport default DownloadLink;\n","import React, { useRef } from \"react\";\nimport A4 from \"./components/A4\";\nimport Info from \"./components/Info\";\nimport Profile from \"./components/Profile\";\nimport ExperiencesSection from \"./components/ExperiencesSection\";\nimport Skills from \"./components/Skills\";\nimport StackOverflow from \"./components/StackOverflow\";\nimport CVData from \"./models/cv\";\nimport DownloadLink from \"./components/DownloadLink\";\n\nconst staticData = require(\"./assets/data.json\") as CVData;\n\nconst App: React.FunctionComponent = () => {\n  const pageRef = useRef(null);\n\n  return (\n    <div className=\"flex flex-col items-center\">\n      <DownloadLink elementRef={pageRef} />\n\n      <div ref={pageRef}>\n        <A4>\n          <div className=\"flex flex-col w-8/12 p-10\">\n            {staticData.experiences.map((x) => (\n              <ExperiencesSection title={x.title} list={x.list} />\n            ))}\n          </div>\n          <div className=\"flex flex-col w-4/12 bg-blue-100 p-10\">\n            <Profile profile={staticData.profile} />\n            <Info info={staticData.info} />\n            <Skills skills={staticData.skills} />\n            <StackOverflow stackoverflow={staticData.stackoverflow} />\n          </div>\n        </A4>\n      </div>\n\n      <div className=\"text-sm text-gray-500 text-center mt-4\">\n        <p>Copyright © 2020 - Omar Mahili</p>\n        <p>MIT License</p>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './styles/main.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}